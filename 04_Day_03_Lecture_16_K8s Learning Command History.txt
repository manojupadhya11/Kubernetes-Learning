
    1  ls
    2  yum install git -y &
    3  git clone https://github.com/manojupadhya11/Kubernetes-Learning.git
    4  ls
    5  cd Kubernetes-Learning/
    6  ls
    7  cd MERN_APP_Deployment\ in\ K8s/
    8  ls
    9  History
   10  history
   11  clear
   12  yum install docker -y
   13  systemctl start dpcker 
   14  systemctl start docker 
   15  systemctl status docker 
   16  curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-latest.x86_64.rpm
   17  rpm -Uvh minikube-latest.x86_64.rpm
   18  minikube start
   19  minikube start --force
   20  curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.28.3/2023-11-14/bin/linux/amd64/kubectl
   21  chmod +x ./kubectl
   22  cp ./kubectl /usr/bin/
   23  kubectl get pods
   24  kubectl apply -f secret.yml 
   25  kubectl a
   26  ls
   27  kubectl apply -f mongo-db-app.yml 
   28  kubectl get pods
   29  kubectl get pods
   30  kubectl get pods
   31  kubectl get pods
   32  kubectl get pods
   33  kubectl get pods
   34  kubectl get pods
   35  kubectl apply -f mongo-service.yml 
   36  kubectl get svc
   37  kubectl apply -f mongo-config.yml 
   38  kubectl get svc
   39  kubectl get config
   40  kubectl apply -f mongo-express-webapp.yml 
   41  kubectl get pods
   42  kubectl get pods
   43  kubectl get pods
   44  kubectl get pods
   45  kubectl apply -f webapp-service.yml 
   46  kubectl get svc
   47  minikube ip
   48  cur 192.168.49.2:32590
   49  curl 192.168.49.2:32590
   50  socat TCP-LISTEN:8081,fork,su=nobody TCP4:192.168.49.2:32590 &
   51  yum install socat -y
   52  socat TCP-LISTEN:8081,fork,su=nobody TCP4:192.168.49.2:32590 &
   53  ls
   54  cd Kubernetes-Learning/
   55  ls
   56  cd MERN_APP_Deployment\ in\ K8s/
   57  kubectl get pods
   58  kubectl get deployment
   59  kubectl scale deployment mongo-deployment --replicas=5
   60  kubectl get replicaset
   61  kubectl get pods
   62  kubectl scale deployment mongo-deployment --replicas=1
   63  kubectl get replicaset
   64  kubectl get pods
   65  kubectl delete pod mongo-deployment-7b4b59766b-tr7vc 
   66  kubectl get pods
   67  ls
   68  vi mongo-db-app.yml 
   69  vi mongo-db-app.yml 
   70  vi mongo-db-app.yml 
   71  kubectl apply -f mongo-db-app.yml 
   72  kubectl get pods
   73  kubectl get pods
   74  docker ps
   75  docker exec -it minikube bash
   76  kubectl get pods -o yaml
   77  docker exec -it minikube bash
   78  kubectl get pods
   79  kubectl delete pod mongo-deployment
   80  kubectl delete pod mongo-deployment-85c858ffd-df7x2
   81  kubectl get pods



------------------INSIDE MONGO_DB_APP POD----------------------
    1  cd /var/lib/kubelet/pods/
    2  cd 404443d7-7449-4781-b214-b2f6d917c02e
    3  ls
    4  cd containers/
    5  ls
    6  cd mongo-db/
    7  ls
    8  cd ..
    9  cd volumes/
   10  ls
   11  cd kubernetes.io~
   12  cd kubernetes.io~empty-dir/
   13  ls
   14  cd mongo-volume/
   15  ls
   16  lsz
   17  ls
   18  history

--------------------K8s Cluster-------HostPath---------------------

   83  vi mongo-db-app.yml 
   84  kubectl apply -f mongo-db-app.yml 
   85  vi mongo-db-app.yml 
   86  kubectl apply -f mongo-db-app.yml 
   87  kubectl get pods
   88  docker exec -it minikube bash
Updated the mongo-db-app.yml file

-------------Inside minikube cluster--------------
       cd data/
   26  ls
   27  exit

----------------------K8s Cluster---------HostPath Deleting the pods and checking the volume ----------------
   90  docker exec -it minikube bash
   91  kubectl get pods
   92  kubectl delete pod mongo-deployment-7857f4cd99-6czd4
   93  kubectl get pods
   94  docker exec -it minikube bash

------------HostPath and emptyDir practical Completed----------------

---------------Persistent Volume(PV) and PVC Practical--------------------
    1  ls
    2  vi pv.yml
    3  kubectl apply -f pv.yml 
    4  kubectl get pv
    5  docker exec -it minikube bash
    6  vi pv.yml
    7  docker exec -it minikube bash
    8  kubectl get pv
    9  vi pvc.yml
   10  kubectl apply -f pvc.yml 
   11  kubectl get pvc
   12  kubectl get pv
   13  vi mongo-db-app.yml 
   14  vi mongo-db-app.yml 
   15  vi mongo-db-app.yml 
   16  kubectl get pods
   17  kubectl apply -f mongo-db-app.yml 
   18  kubectl get pods
   19  docker exex -it minikube bash
   20  docker exec -it minikube bash
   21  history

------------Inside minikbe clster--------------------
   38  mkdir -p storage/manu
   39  ls
   40  cd storage/
   41  ls
   42  cd manu/
   43  ls
   44  exit
   45  ls
   46  cd storage/
   47  ls
   48  cd manu/
   49  ls
   50  history



###---------------Persistent Volume Practical Completed------------------###



###############-------Namespaces in K8s--------################
   53  kubectl get namespaces
   54  kubectl get pod
   55  kubectl get pod -n default
   56  kubectl get pod -n kube-system
   57  kubectl get pod -n kube-public
   58  kubectl get pod -n kube-node-lease
   59  vi manu_ns.yml
   60  ls
   61  vi manu_ns.yml
   62  kubectl apply -f manu_ns.yml 
   63  kubectl get namespaces
   64  kubectl get ns
   65  cd ..
   66  kubectl get ns
   67  history
   68  ls
   69  vi pod.yml
   70  ls
   71  cd Kubernetes-Learning/
   72  history
   73  ls
   74  vi pod_second.yml
   75  vi pod_second.yml
   76  kubectl get ns
   77  vi pod_second.yml
   78  kubectl apply -f pod_second.yml 
   79  vi pod_second.yml
   80  kubectl apply -f pod_second.yml 
   81  kubectl get pods
   82  kubectl get pods --ns manudevops 
   83  kubectl get pods -n manudevops 
   84  cat pod_second.yml 
   85  vi pod_second.yml 
   86  vi pod_second.yml 
   87  kubectl apply -f pod_second.yml 
   88  kubectl get pods
   89  kubectl get pods -n manudevops
   90  kubectl delete pod flask-app -n manudevops
   91  kubectl apply -f pod_second.yml 
   92  kubectl get pods -n manudevops
   93  kubectl describe pod flask-app -n manudevops
   94  history

-----------Name Space command completed ------------------


##################### K8S Dashboard Practical ##############################
    1  kubectl get all
    2  kubectl get all -n manudevops
    3  kubectl get ns
    4  minikube --help
    5  minikube dashboard --help
    6  minikube dashboard 
    7  history
 	minikube dashboard
 	kubectl get pods -n kubernetes-dasboard
   72  kubectl get pods -n kubernetes-dashboard
   73  kubectl get deployments -n kubernetes-dashboard
   74  kubectl edit deployment kubernetes-dashboard
   75  kubectl edit deployment kubernetes-dashboard -n kubernetes-dashboard
   76  kubectl get svc -n kubernetes-dashboard
   77  kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard
   78  kubectl get svc -n kubernetes-dashboard
   79  kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard
   80  kubectl get svc -n kubernetes-dashboard
   81  cd /
   82  socat TCP-LISTEN:8083,fork,su=nobody TCP4:192.168.49.2:31448 &

--------------------------------------------------------------------------------

############################ Health Check in K8s ##################################

    68  ls
   69  vi pod.yml
   70  cd home/
   71  ls
   72  cd ec2-user/
   73  ls
   74   cd Kq
   75  cd Kubernetes-Learning/
   76  ls
   77    ls
   78  vi pod_second.yml 
   79  kubectl apply -f pod_second.yml 
   80  vi pod_second.yml 
   81  kubectl apply -f pod_second.yml 
   82  vi pod_second.yml 
   83  kubectl apply -f pod_second.yml 
   84  vi pod_second.yml 
   85  kubectl apply -f pod_second.yml 
   86  vi pod_second.yml 
   87  kubectl apply -f pod_second.yml 
   88  kubectl get pods -n manudevops
   89  kubectl delete pod flask-app -n manudevops
   90  kubectl apply -f pod_second.yml 
   91  kubectl exec pod flask-app --bash
   92  kubectl exec pod flask-app -- bash -n manudevops
   93  kubectl exec flask-app -- bash -n manudevops
   94   kubectl exec --tty flask-app -- /bin/bash -n mygfg 
   95  clear
   96  kubectl get pods -n manudevops
   97  ls
   98  cp pod_second.yml pod_third.yml
   99  vi pod_third.yml 
  100  kubectl apply -f pod_third.yml 
  101  kubectl apply -f pod_third.yml 
  102  vi pod_third.yml 
  103  kubectl apply -f pod_third.yml 
  104  kubectl get pods
  105  kubectl exec --stdin --tty flask-app -- bash
  106  kubectl get pods
  107  kubectl get pods -n manudevops
  108  history


TO CHECK THE LIVENESS PROBE DELETE A FILE INSIDE A POD THE POD AUTOMATICALLY BECOMES UNHEALTHY AND RESTARTS AGAIN 
It Keeps checking on the health check of the pods

Similarly try of readiness probe and startup probe 


















